# Natural Language Processing & Deep Learning

Premier moyen de comprendre le sens d'un mot. En l'associant aux mots qui l'entoure d
dans une phrase. On obtiendrait donc une matrice carré de vecteur. Exemple
```python
words = ["I","like","enjoy","deep","learning",
         "NLP","flying","."]

X = np.array([
    [0,2,1,0,0,0,0,0],
    [2,0,0,1,0,1,0,0],
    [1,0,0,0,0,0,1,0],
    [0,1,0,0,1,0,0,0],
    [0,0,0,1,0,0,0,1],
    [0,1,0,0,0,0,0,1]
    ...
])
```
__Probleme de cette représentation__: Matrice sparse + place en mémoire + Couteux de rajouter des mots

__Solution__ : 
 
~~ Framed
~ Theorem {caption:"Décomposition d'une matrice en valeurs singulières"}
____ \
Soit M une matrice m×n dont les coefficients appartiennent au corps K, où K = ℝ ou K = ℂ. Alors il existe une factorisation avec U une matrice unitaire m×m sur K, $\Sigma$ une matrice m×n dont les coefficients diagonaux sont des réels positifs ou nuls et tous les autres sont nuls, et $V^{*}$ est la matrice adjointe à V, matrice unitaire n×n sur K. On appelle cette factorisation la décomposition en valeurs singulières de 
M. 
 $M = U Σ V ∗ {\displaystyle M=U\Sigma V^{*}\,\!} M=U\Sigma V^{*}\,\!$
{text-align: center}
~
~~

